$z-map: (
 header: true,
 nav: true,
 child: (
  foo: true,
  bar: (
   hoge: true,
   fuga: true,
   hohoho: true
  )
 )
);
$z-map-reverse: true;
//@import 'functions/z-index';


// ================================================
// * Functions
// ================================================

//== Sass Version
$libsass-version: 3.4 !default;
$ruby-sass: false !default;

//== z-index
$z-map-reverse: false !default;
$z-map: (
 front: true,
 header: true,
 menu: true,
 modal: (
  button: true,
  images: (
   mask: true,
   body: true
  ),
  close: true
 )
) !default;



//== z-index
@function z($options...) {
 $option-length: length($options);
 $point: 1;
 $is-index: 1;

 $temp-map: $z-map;
 $get-key: nth($options, $option-length);

 @if($option-length > 1) {
  @each $option in $options {
   @if($option != $get-key) {
    $temp-map: map-get($temp-map, $option);
   }
  }
 }

 @if(($libsass-version > 3.4 or $ruby-sass) and not $z-map-reverse) {

  $get-value: map-get($temp-map, $get-key);
  $is-index: index($temp-map, ($get-key $get-value));

 } @else {
  $counter: 1;
  @if ($z-map-reverse) {
   $counter: length($temp-map);
   $point: -1;
  }

  @each $map-key, $map-value in $temp-map {
   @if $map-key == $get-key {
    $is-index: $counter;
   }
   $counter: $counter + $point;
  }
 }

 @return $is-index;
}






//.ex-header { z-index: z(header); }//3
//.ex-child { z-index: z(child);} //// 1
//.ex-child-foo { z-index: z(child, bar, hohoho);} // 1
