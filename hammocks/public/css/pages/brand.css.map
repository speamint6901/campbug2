{"version":3,"sources":["brand.scss","../core/_color.scss","../core/_mixin.scss"],"names":[],"mappings":"AAIA;EAME,YAAU;EAEV,eAAa;EACb,mBAAkB;EAClB,aAAW,EACX;;AAXF;EAeE,aAAW;EACX,aAAW;EACX,0BCKkB;EDJlB,gBAAc,EAwBd;EA1CF;IAoBG,eCEiB,EDDjB;EArBH;IAwBG,gBAAe;IACf,YAAW;IACX,aAAY;IACZ,kBAAiB;IACjB,mBAAkB;IAClB,mBAAkB;IAClB,kBAAiB;IACjB,0BCTiB,EDUjB;EAhCH;IAmCG,iBAAgB;IAChB,kBAAiB;IACjB,qBAAoB,EAIpB;IAzCH;MAuCI,oBAAmB,EACnB;;AAxCJ;EA+CI,eCnCiB;EDoCjB,0BClDgB;EDmDhB,oBAAmB;EACnB,kBAAiB;EACjB,iBAAgB,EAChB;;AApDJ;EEyEC,qBAAoB;EACpB,sBAAqB;EACrB,qBAAa;EAAb,cAAa;EFdZ,sBAAoB,EAcpB;EA3EF;IEwFC,oBFxBsB;IEyBtB,gBFzBsB;IE0BtB,YF1BsB;IE0BtB,QF1BsB;IACpB,gBAAe;IACf,sBAAqB;IACrB,mBAAkB;IAClB,eC9CiB;ID+CjB,gBAAe,EAEf;IAvEH;MAsEW,eCxES,EDwEY;EAtEhC;IAyEG,aAAY,EACZ;;AEpED;EFNF;IAoFG,eAAc;IACd,eAAc,EACd,EAAA","file":"brand.css","sourcesContent":["@import \"impoprt_setting\";\n//******************************* impoprt partial /\n\n\n.brand {\n //text-align: center;\n\n .card_flex{ }//.card_flex\n\n #masonry {\n  width:100%;\n  //margin-left: 20px;\n  overflow:auto;\n  text-align: center;\n  margin:auto;\n }\n\n .brand_card{\n  //max-width: 320px;\n  width:320px;\n  margin:20px;\n  border: 1px solid $text-color;\n  display:inline;\n  a{\n   color: $text-color;\n  }//a\n\n  .initial{\n   font-size: 20px;//\n   width: 40px;\n   height: 40px;\n   line-height: 40px;\n   border-radius: 50%;\n   text-align: center;\n   margin: 40px auto;\n   border: 1px solid $text-color;\n  }//initial\n\n  ul{\n   text-align: left;\n   margin: auto 80px;\n   padding-bottom: 80px;\n   li{\n    margin-bottom: 10px;\n   }\n  }//ul\n }//brand_card\n\n .brand_list{\n  li{\n   span{\n    color: $base-color;\n    background-color: $main-color;\n    border-radius: 20px;\n    padding: 0px 10px;\n    margin-left: 5px;\n   }\n  }\n }//brand_list\n\n\n\n .brand_sarch{\n  //max-width: 500px;\n  @include flex_container();\n  margin:0 auto 80px 0;\n  a,label{\n   //width: 7%;\n   @include flex_item(1);\n   font-size: 26px;\n   display: inline-block;\n   text-align: center;\n   color: $text-color;\n   cursor: pointer;\n   &:hover{color: $main-color;}\n  }\n  input[type=\"radio\"]{\n   border: none;\n  }\n }\n\n //breakpoints -------------------------------\n @include MQ(maxL) { }//breakpoints (maxL) -------------------------\n\n @include MQ(M) { }//breakpoints (M) -------------------------\n\n @include MQ(S) {\n  .brand_sarch{\n   display: block;\n   margin: 0 auto;\n  }//.brand_sarch\n\n\n }//breakpoints (S) -------------------------\n\n} //item\n\n\n\n.mobile { //mobile setting **********************\n\n\n //Gyro setting --------------------------------\n @media screen and (orientation: portrait) { }//portrait\n @media screen and (orientation: landscape) { }//landscape\n //end Gyro setting ----------------------------\n\n\n} //mobile end **********************************\n\n.tablet { //tablet setting **********************\n\n\n //Gyro setting --------------------------------\n @media screen and (orientation: portrait) { } //portrait\n @media screen and (orientation: landscape) { }//landscape\n //end Gyro setting ----------------------------\n\n\n} //tablet end **********************************\n","@import \"open-color\";\n\n$main-color: #4EB5A2;\n$main-color_quote: darken($main-color, 10%);\n$main_light-color: lighten( $main-color, 20% );\n$main_heigh-color: saturate( $main-color, 20% );\n$main_low-color: desaturate( $main-color, 20% );\n$main_alpha-color: transparentize( $main-color, 0.3 );\n\n$second-color: #9E9E9F;\n$second-color_quote: darken($second-color, 10%);\n$second_light-color: lighten( $second-color, 35% );\n$second_heigh-color: saturate( $second-color, 20% );\n$second_low-color: desaturate( $second-color, 20% );\n$second_alpha-color: transparentize( $second-color, 0.3 );\n\n$third-color: #FCFBF9;//linkのないタイトルなど\n$third-color_quote: darken($third-color, 10%);\n$third_light-color: lighten( $third-color, 15% );\n$third_heigh-color: saturate( $third-color, 20% );\n$third_low-color: desaturate( $third-color, 20% );\n$third_alpha-color: transparentize( $third-color, 0.3 );\n\n//--\n$base-color:$third-color; //#f5f7fa;//下地の色\n\n$text-color: #95989A;//本文とか下地に載る色\n$link-color: $main-color;\n$sublink-color: $text-color; //強調しないlinkcolor\n$line-color: #cecece;\n$ct-background:rgba(255, 255, 255, 0.88);\n$form_base_color:#dddddd;\n\n$disable-color:#c4c4c4;\n$disable-color_quote: lighten($disable-color, 90%);\n\n$default-color:#fff;\n$default-color_quote: darken($default-color, 10%);\n\n$primary-color:#337AB7;\n$primary-color_quote: darken($primary-color, 10%);\n$primary_light-color: lighten( $primary-color, 35% );\n\n$success-color:#5CB85C;\n$success-color_quote: darken($success-color, 10%);\n$success_light-color: lighten( $success-color, 35% );\n\n$info-color:#31B0D5;\n$info-color_quote: darken($info-color, 10%);\n$info_light-color: lighten( $info-color, 35% );\n\n$danger-color:#C9302C;\n$danger-color_quote: darken($danger-color, 10%);\n\n$warning-color:#ce7070;//#F0AD4E;\n$warning-color_quote: darken($warning-color, 10%);\n\n$inverse-color:#000;\n$inverse-color_quote: darken($inverse-color, 10%);\n\n$ghost-color:transparent;\n\n$loadicon-color:$form_base_color;\n","//******************************* Prefix /\n@mixin prefix($property, $value) {\n     @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {\n          #{$prefix}#{$property}: $value;\n     }\n}\n\n//******************************* breakpoints\n@mixin MQ($canvas) {\n @if $canvas == S {\n  @media only screen and (max-width: $S) { @content; }\n }\n @else if $canvas == M {\n  @media only screen and (max-width: $M) { @content; }\n }\n @else if $canvas == L {\n  @media only screen and (max-width: $L) { @content; }\n }\n @else if $canvas == maxL {\n  @media only screen and (min-width: $maxL) { @content; }\n }\n}\n\n\n//******************************* common /\n@mixin common_radius {  border-radius: 4px; }\n\n//******************************* Font /\n@mixin fontsize($size: 10) {\n  font-size: $size + px;\n  font-size: ($size / 10) * 1rem;\n}\n//ex. @include fontsize(12);\n\n@mixin lineheight($lheight: 10) {\n  line-height: $lheight + px;\n  line-height: ($lheight / 10) * 1rem;\n}\n//ex. @include lineheight(12);\n\n\n//******************************* Liquid Size /\n@mixin liquidsize {\n width:100%;\n height:auto;\n margin:0 auto;\n}\n\n//******************************* Layout /\n//==================== 天地の中央に配置\n@mixin vertical-align {\n position: relative;\n top: 50%;\n -webkit-transform: translateY(-50%);\n -ms-transform: translateY(-50%);\n transform: translateY(-50%);\n}\n//ex. @include vertical-align();\n\n//side と contentsを揃える時になんか使って\n@mixin pittari_box{\n padding-bottom: 32768px;\n margin-bottom: -32768px;\n}\n\n\n@mixin windowfit($top_num: 10px, $bottom_num: 10px, $leftright_num: 100%) {\n width: 100%;\n float: left;\n padding: $top_num $leftright_num $bottom_num $leftright_num;\n margin:  0 (-$leftright_num);\n box-sizing: initial;\n}\n//ex.  @include windowfit(5%,20px,100%);\n\n\n@mixin flex_container{\n display: -webkit-box;//* Android4.3以前ブラウザ用 */\n display: -webkit-flex;//* iOS8以前Safari用 */\n display: flex;\n\n //* 以下、デフォルト指定 しないとこの値が使用  */\n //flex-direction: row; //アイテムをどの方向に並べるか 水平・垂直\n //flex-wrap: nowrap; //アイテムを1行or複数行にするか\n //justify-content: flex-start; //directionに沿ったアイテムの水平の揃え方\n //align-items: stretch; //directionに沿ったアイテムの垂直の揃え方\n //align-content: stretch; //アイテムの行ごとの揃え方 複数行あり、親との間に隙間がある場合に有効\n}\n//ex. @include flex_container();\n\n\n@mixin flex_item($flex:none){\n -webkit-box-flex: $flex;//* Android4.3以前ブラウザ用 */\n -webkit-flex: $flex;//* iOS8以前Safari用 */\n flex: $flex;\n\n //* 以下、デフォルト 指定しないとこの値が使用 */\n //order: 0; //アイテムの順番を指定する\n //flex-grow: 0; //アイテムの伸びる倍率を指定する\n //flex-shrink: 0; //アイテムの縮む倍率を指定する\n //flex-basis: auto; //アイテムの幅・高さを指定する 幅か、高さかはdirectionによる\n //align-self: auto; //コンテナのalign-itemsより優先する\n}\n//ex. @include flex_item();\n\n//******************************* Decorate /\n//==================== FontAwsomeを使ったアイコン表示（前付け）\n@mixin fa-icon($fa-content: \"\\f08a\", $f-size:14, $l-size:28, $fa-color:$text-color, $fa-pd-r :20px) {\n  &:before{\n   content:$fa-content;\n   font-family:\"FontAwesome\";\n   @include fontsize($f-size);\n   @include lineheight($l-size);\n   color:$fa-color;\n   padding-right: $fa-pd-r;\n }\n} //ex. @include fa-icon(\"\\F095\", 14, 18, $base-color, 10px);\n\n//==================== FontAwsomeを使ったアイコン表示（後付け）\n@mixin fa-icon-af($fa-content: \"\\f08a\", $f-size:14, $l-size:28, $fa-color:$text-color, $fa-pd-r :20px) {\n  &:after{\n   content:$fa-content;\n   font-family:\"FontAwesome\";\n   @include fontsize($f-size);\n   @include lineheight($l-size);\n   color:$fa-color;\n   padding-right: $fa-pd-r;\n   right: 0;\n   position: absolute;\n }\n} //ex. @include fa-icon-af(\"\\F095\", 14, 18, $base-color, 10px);\n\n//==================== グラデ上下に明→暗\n@mixin gradient-top-lighten($color:$main-color, $lighten:10){\n  background-color: $color;\n @include filter-gradient(lighten($color, $lighten), $color, vertical);//IE\n  @include background-image(linear-gradient(lighten($color, $lighten) 0%, $color 100%));\n}\n\n//==================== グラデ上下に暗→明\n@mixin gradient-top-darken($color:$main-color, $darken:10){\n  background-color: $color;\n @include filter-gradient(lighten($color, $darken), $color, vertical);//IE\n  @include background-image(linear-gradient(darken($color, $darken) 0%, $color 100%));\n}\n\n//==================== グラデ　線形（水平・垂直）と円形\n@mixin gradient($start-color, $end-color, $orientation)\n{\n background: $start-color;\n @if $orientation == vertical\n {\n  // vertical\n  background: -moz-linear-gradient(top,  $start-color 0%, $end-color 100%);\n  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start-color), color-stop(100%,$end-color));\n  background: -webkit-linear-gradient(top,  $start-color 0%,$end-color 100%);\n  background: -o-linear-gradient(top,  $start-color 0%,$end-color 100%);\n  background: -ms-linear-gradient(top,  $start-color 0%,$end-color 100%);\n  background: linear-gradient(to bottom,  $start-color 0%,$end-color 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=0 );\n }\n @else if $orientation == horizontal\n {\n  // horizontal\n  background: -moz-linear-gradient(left,  $start-color 0%, $end-color 100%);\n  background: -webkit-gradient(linear, left top, right top, color-stop(0%,$start-color), color-stop(100%,$end-color));\n  background: -webkit-linear-gradient(left,  $start-color 0%,$end-color 100%);\n  background: -o-linear-gradient(left,  $start-color 0%,$end-color 100%);\n  background: -ms-linear-gradient(left,  $start-color 0%,$end-color 100%);\n  background: linear-gradient(to right,  $start-color 0%,$end-color 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=1 );\n }\n @else\n {\n  // radial\n  background: -moz-radial-gradient(center, ellipse cover,  $start-color 0%, $end-color 100%);\n  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,$start-color), color-stop(100%,$end-color));\n  background: -webkit-radial-gradient(center, ellipse cover,  $start-color 0%,$end-color 100%);\n  background: -o-radial-gradient(center, ellipse cover,  $start-color 0%,$end-color 100%);\n  background: -ms-radial-gradient(center, ellipse cover,  $start-color 0%,$end-color 100%);\n  background: radial-gradient(ellipse at center,  $start-color 0%,$end-color 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=1 );\n }\n}\n//ex.@include gradient(#ff00ff, #ff00cc, vertical);\n\n//==================== グラデ\n@mixin linear-gradient($direction, $color-stops...) {\n background: nth(nth($color-stops, 1), 1);\n background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);\n background: linear-gradient($direction, $color-stops);\n}\n//@include linear-gradient(hotpink, tomato);\n\n//==================== 斜線パターン\n@mixin diagonal($stripe-color1, $stripe-color2, $stripe-size) {\n background:  -webkit-gradient(\n  linear, left top, right bottom,\n  from ($stripe-color1),\n  color-stop(0.25, $stripe-color1),\n  color-stop(0.25, $stripe-color2),\n  color-stop(0.5, $stripe-color2),\n  color-stop(0.5, $stripe-color1),\n  color-stop(0.75, $stripe-color1),\n  color-stop(0.75, $stripe-color2),\n  to($stripe-color2)\n );\n background: -moz-linear-gradient(\n  -45deg,\n  $stripe-color1 25%,\n  $stripe-color2 25%,\n  $stripe-color2 50%,\n  $stripe-color1 50%,\n  $stripe-color1 75%,\n  $stripe-color2 75%,\n  $stripe-color2\n );\n background: linear-gradient(\n  -45deg,\n  $stripe-color1 25%,\n  $stripe-color2 25%,\n  $stripe-color2 50%,\n  $stripe-color1 50%,\n  $stripe-color1 75%,\n  $stripe-color2 75%,\n  $stripe-color2\n );\n\n background-size: $stripe-size $stripe-size;\n}\n//ex.@include diagonal(#ddd, #fff, 2px);\n\n//==================== グラデ super-gradient\n@function contains($colors,$var) {\n $contains: false;\n @each $item in $colors { @if $item == $var { $contains: true; } }\n @return $contains;\n}\n\n@function orientation-string($type, $from, $w3c:false) {\n $string: '';\n\n @if $w3c {\n\n  @if $type == 'linear' {\n   @if $from == 'top' or $from == 'bottom' { $string: 'to bottom, '; }\n   @else if $from == 'left' or $from == 'right' { $string: 'to right, '; }\n   @else if $from == (left top) or $from == (top left) or $from == (right bottom) or $from == (bottom right) { $string: '135deg, '; }\n   @else { $string: '45deg, '; }\n\n  } @else if $type == 'radial' { $string: 'ellipse at ' + $from + ', '; }\n\n } @else { // new webkit, moz, ms, o\n\n  @if $type == 'linear' {\n   @if $from == 'top' or $from == 'bottom' { $string: 'top, '; }\n   @else if $from == 'left' or $from == 'right' { $string: 'left, '; }\n   @else if $from == (left top) or $from == (top left) or $from == (right bottom) or $from == (bottom right) { $string: '-45deg, '; }\n   @else { $string: '45deg, '; }\n\n  } @else if $type == 'radial' { $string: $from + ', ellipse cover, '; }\n\n }\n\n @return $string;\n}\n\n@function color-substring($colors) {\n $i: 1;\n $substring: '';\n $string: '';\n\n @while $i < length($colors) {\n\n  $substring: nth($colors, $i) + ' ' + nth($colors, $i+1);\n  $string: $string + $substring;\n  $i: $i + 1;\n\n }\n\n @return $string;\n}\n\n@function color-string($colors) {\n $i: 1;\n $spacer: ', ';\n $substring: '';\n $string: '';\n\n @while $i <= length($colors) {\n  @if $i == length($colors) { $spacer: ''; }\n\n  $substring: color-substring(nth($colors, $i)) + $spacer;\n  $string: $string + $substring;\n  $i: $i + 1;\n\n }\n\n @return $string;\n}\n\n@function ie-gradient-type($direction) {\n @if $first-color { @return nth(nth($colors, 1), 1) }\n @else { @return nth(nth($colors, length($colors)), 1) }\n}\n\n@function ie-colors($colors, $first-color:true) {\n @if $first-color { @return nth(nth($colors, 1), 1) }\n @else { @return nth(nth($colors, length($colors)), 1) }\n}\n\n@mixin sgradient($type:'linear', $from:'top', $colors:((rgba(42,179,221,1), 0%),(rgba(183,80,80,1), 100%))) {\n\n $orientation-string: orientation-string($type, $from);\n $orientation-string-w3c: orientation-string($type, $from, $w3c:true);\n\n $color-string: #{color-string($colors)};\n\n $css-string: gradient(#{$orientation-string}#{$color-string});\n$css-string-w3c: gradient(#{$orientation-string-w3c}#{$color-string});\n\n$ie-gradient-type: 0;\n@if $type != 'vertical' { $ie-gradient-type: 1 }\n\nbackground-color: #{ie-colors($colors, false)};\nbackground: -webkit-#{$type}-#{$css-string};\nbackground:    -moz-#{$type}-#{$css-string};\nbackground:     -ms-#{$type}-#{$css-string};\nbackground:      -o-#{$type}-#{$css-string};\nbackground:         #{$type}-#{$css-string-w3c};\nfilter: progid:DXImageTransform.Microsoft.gradient(GradientType=#{$ie-gradient-type}, StartColorStr='#{ie-colors($colors)}', EndColorStr='#{ie-colors($colors, false)}');\n}\n\n//ex.2色を使った垂直方向のグラデーション\n// @include sgradient($colors:(\n// (#31B7D7, 0%),\n// (#EDAC7D, 100%)\n// ));\n\n//ex.3色を使った水平方向のグラデーション\n// @include sgradient( $from: left, $colors: (\n// (#E47D7D, 0%),\n// (#C195D3, 50%),\n// (#4FB4E8, 100%)\n// ));\n\n//ex.4色を使った斜め方向のグラデーション\n// @include sgradient( $from: top left, $colors: (\n// (#B58234, 0%),\n// (#D2B545, 50%),\n// (#D7C04D, 50.01%),\n// (#FFFFFF, 100%)\n// ));\n\n//ex.2色を使った放射状のグラデーション\n// @include sgradient( $type: radial, $colors: (\n// (#8ABB5D, 0%),\n// (#42736F, 100%)\n// ));\n\n//ex.3色を使った放射状のグラデーション\n// @include sgradient( $type: radial, $from: top right, $colors: (\n// (#C5492C, 0%),\n// (#EAA14E, 50%),\n// (#F0EB7F, 100%)\n// ));\n\n//==================== opacity（不透明度）IE対策\n@mixin opacity($opacity) {\n opacity: $opacity;\n filter: alpha(opacity=($opacity * 100));\n}\n//ex. @include opacity(0.5);\n\n//==================== ボックスシャドウ\n@mixin box-shadow( $h: 10px , $v: 10px , $b: 0px , $s: 0px , $c: #000000 ) {\n -webkit-box-shadow: $h $v $b $s $c;\n -moz-box-shadow: $h $v $b $s $c;\n box-shadow: $h $v $b $s $c;\n}\n//ex. @include box-shadow(8px, 8px);\n\n@mixin module-triangle($size: 16px, $color: #000, $side: top, $position: 50%, $direction: regular) {\n &:before {\n  content: \"\";\n  display: inline-block;\n  border: $size solid transparent;\n  border-left-color: $color;\n  position: absolute;\n  left: -33px;\n  //top: 50%;\n  bottom:4px;\n  -webkit-transform: rotate(180deg);\n  -moz-transform: rotate(180deg);\n }\n &:after {\n  content: \"\";\n  display: inline-block;\n  border: $size solid transparent;\n  border-left-color: $color;\n  position: absolute;\n  left: -32px;\n  //top: 50%;\n  bottom:4px;\n  -webkit-transform: rotate(180deg);\n  -moz-transform: rotate(180deg);\n }\n}\n\n\n//横幅を px → % へ変換して指定する\n@mixin widtnPercent( $parentPxWidth, $pxWidth ){\n width: floor((( $pxWidth / $parentPxWidth ) * 10000% )) / 100;\n}\n//ex.@include widtnPercent(960, 300);\n"]}